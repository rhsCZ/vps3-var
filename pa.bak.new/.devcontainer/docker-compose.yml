services:
  app:
    container_name: poweradmin
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VARIANT=${PHP_VERSION}-fpm-${DEBIAN_VERSION}
    volumes:
      - ../.:/app
      - ./conf/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./conf/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ../..:/workspaces:cached
      - sqlite_data:/data
    networks:
      - internal
    ports:
      - "9000:9000"
    environment:
      - PHP_IDE_CONFIG=serverName=localhost
    depends_on:
      - mysql
      - pgsql
      - sqlite

  webserver:
    image: nginx:latest
    container_name: webserver
    networks:
      - internal
    ports:
      - "8080:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../.:/app
    depends_on:
      - app

  mysql:
    image: ${MYSQL_IMAGE}:${MYSQL_VERSION}
    container_name: mariadb
    networks:
      - internal
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_IMAGE: ${MYSQL_IMAGE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ../sql/pdns/${PDNS_BRANCH}/schema.mysql.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts/custom-healthcheck.sh:/custom-healthcheck.sh
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "/custom-healthcheck.sh" ]
      start_period: 1m
      start_interval: 10s
      interval: 30s
      timeout: 5s
      retries: 3

  pgsql:
    image: ${PGSQL_IMAGE}:${PGSQL_VERSION}
    container_name: postgres
    networks:
      - internal
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - ../sql/pdns/${PDNS_BRANCH}/schema.pgsql.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 3

  sqlite:
    image: keinos/sqlite3
    container_name: sqlite
    user: "0:0"
    volumes:
      - sqlite_data:/data
      - ../sql/pdns/47/schema.sqlite3.sql:/schema.sqlite3.sql
      - ./scripts/create-sqlite-db.sh:/init-db.sh
    command: ["/bin/sh", "-c", "/init-db.sh && sqlite3"]
    stdin_open: true
    tty: true

  adminer:
    image: adminer
    container_name: adminer
    networks:
      - internal
    ports:
      - "8090:8080"
    volumes:
      - sqlite_data:/data
      - ./adminer/login-password-less.php:/var/www/html/plugins-enabled/login-password-less.php

#  ldap:
#    image: dinkel/openldap
#    container_name: ldap
#    networks:
#      - internal
#    environment:
#      - SLAPD_PASSWORD=poweradmin
#      - SLAPD_DOMAIN=poweradmin.org
#      - SLAPD_ADDITIONAL_MODULES=memberof
#    ports:
#      - 389:389

  ldap:
    image: osixia/openldap:1.5.0
    container_name: ldap
    networks:
      - internal
    environment:
      - LDAP_ORGANISATION=poweradmin
      - LDAP_DOMAIN=poweradmin.org
      - "LDAP_BASE_DN=dc=poweradmin,dc=org"
      - LDAP_ADMIN_PASSWORD=poweradmin
    ports:
      - 389:389
      - 636:636

  ldapadmin:
    image: osixia/phpldapadmin:0.9.0
    container_name: ldapadmin
    networks:
      - internal
    environment:
      - PHPLDAPADMIN_LDAP_HOSTS=ldap
    ports:
      - 8443:443

  dns:
    image: powerdns/pdns-auth-${PDNS_BRANCH}:${PDNS_VERSION}
    container_name: powerdns
    networks:
      - internal
    volumes:
      - ./conf/pdns.conf:/etc/powerdns/pdns.conf
    ports:
      - "1053:53"
      - "1053:53/udp"
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data: { }
  pgsql_data: { }
  sqlite_data: {}

networks:
  internal:
    driver: bridge
