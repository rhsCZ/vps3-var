{% extends 'base.html.twig' %}

{% block title %}
    {% trans %}Step{% endtrans %} {{ current_step }}: {% trans %}Configuring Database Connection{% endtrans %}
{% endblock %}

{% block content %}
    <p>{% trans %}To prepare the database for using Poweradmin, the installer needs to modify the PowerDNS database. It will
        add a number of tables and it will fill these tables with some data. If the tables are already present, the
        installer will drop them first.{% endtrans %}</p>

    <p>{% trans %}To do all of this, the installer needs to access the database with an account which has sufficient rights.
        If you trust the installer, you may give it the username and password of the database user root. Otherwise, make
        sure the user has enough rights, before actually proceeding.{% endtrans %}</p>
    <hr>

    <form class="needs-validation" method="post" novalidate>
        <input type="hidden" name="install_token" value="{{ install_token }}">
        <table class="table table-sm">
            <tbody>
            <tr>
                <td class="col-md-2">{% trans %}Database type{% endtrans %}</td>
                <td>
                    <select id="db_type" class="form-select form-select-sm" name="db_type" onChange="updateFormFields(this.value)">
                        <option value="mysql" {% if db_type == 'mysql' %}selected{% endif %}>MySQL</option>
                        <option value="pgsql" {% if db_type == 'pgsql' %}selected{% endif %}>PostgreSQL</option>
                        <option value="sqlite" {% if db_type == 'sqlite' %}selected{% endif %}>SQLite</option>
                    </select>
                </td>
                <td>
                    <label for="db_type">{% trans %}The type of the PowerDNS database.{% endtrans %}</label>
                </td>
            </tr>
            <tr id="username_row">
                <td>{% trans %}Username{% endtrans %}</td>
                <td>
                    <input id="username" class="form-control form-control-sm" type="text" name="db_user" value="{{ db_user }}" required>
                    <div class="invalid-feedback">{% trans %}Provide the user name{% endtrans %}</div>
                </td>
                <td>{% trans %}The username to use to connect to the database, make sure the username has
                    sufficient rights to perform administrative task to the PowerDNS database (the installer wants to drop,
                    create and fill tables to the database).{% endtrans %}
                </td>
            </tr>
            <tr id="password_row">
                <td>{% trans %}Password{% endtrans %}</td>
                <td>
                    <div class="input-group">
                        <input class="form-control form-control-sm" type="password" id="userpass" name="db_pass" value="{{ db_pass }}" autocomplete="off" required>
                        <button class="btn btn-sm btn-outline-secondary" type="button" onclick="showPassword('userpass', 'eye1')"><i class="bi bi-eye-fill" id="eye1"></i></button>
                        <div class="invalid-feedback">{% trans %}Provide user password{% endtrans %}</div>
                    </div>
                </td>
                <td>{% trans %}The password for this username.{% endtrans %}</td>
            </tr>
            <tr id="db_hostname_row">
                <td>{% trans %}Hostname{% endtrans %}</td>
                <td>
                    <input class="form-control form-control-sm" type="text" id="host" name="db_host" value="{{ db_host|default('localhost') }}" required>
                    <div class="invalid-feedback">{% trans %}Provide the hostname{% endtrans %}</div>
                </td>
                <td>{% trans %}The hostname on which the PowerDNS database resides. Frequently, this will be "localhost".{% endtrans %}
                </td>
            </tr>
            <tr id="db_port_row">
                <td>{% trans %}DB Port{% endtrans %}</td>
                <td>
                    <input class="form-control form-control-sm" type="text" id="db_port" name="db_port" value="{{ db_port|default('3306') }}" required>
                    <div class="invalid-feedback">{% trans %}Provide database port{% endtrans %}</div>
                </td>
                <td>{% trans %}The port the database server is listening on.{% endtrans %}</td>
            </tr>
            <tr>
                <td>{% trans %}Database{% endtrans %}</td>
                <td class="w-25">
                    <input class="form-control form-control-sm" type="text" name="db_name" value="{{ db_name }}" required>
                    <div class="invalid-feedback">{% trans %}Provide the name of the database{% endtrans %}</div>
                </td>
                <td><span id="db_name_title">{% trans %}The name of the PowerDNS database.{% endtrans %}</span>
                    <span id="db_path_title" style="display: none;">{% trans %}The path and filename to the PowerDNS SQLite database.{% endtrans %}</span>
                </td>
            </tr>
            <tr id="db_charset_row">
                <td>{% trans %}DB charset{% endtrans %}</td>
                <td>
                    <select class="form-select form-select-sm" name="db_charset">
                        <option value="">{% trans %}Use default{% endtrans %}</option>
                    </select>
                </td>
                <td>{% trans %}The charset (encoding) which will be used for new tables. Leave it empty then default database charset will be used.{% endtrans %}</td>
            </tr>
            <tr id="db_collation_row">
                <td>{% trans %}DB collation{% endtrans %}</td>
                <td>
                    <select class="form-select form-select-sm" name="db_collation">
                        <option value="">{% trans %}Use default{% endtrans %}</option>
                    </select>
                </td>
                <td>{% trans %}Set of rules for comparing characters in database. Leave it empty then default database collation will be used.{% endtrans %}</td>
            </tr>
            <tr>
                <td>{% trans %}Poweradmin administrator password{% endtrans %}</td>
                <td>
                    <div class="input-group">
                        <input class="form-control form-control-sm" type="password" id="pa_pass" name="pa_pass" value="{{ pa_pass }}" autocomplete="off" required>
                        <button class="btn btn-sm btn-outline-secondary" type="button" onclick="showPassword('pa_pass', 'eye2')"><i class="bi bi-eye-fill" id="eye2"></i></button>
                        <div class="invalid-feedback">{% trans %}Provide a password{% endtrans %}</div>
                    </div>
                </td>
                <td>
                    {% trans %}The password of the Poweradmin administrator. This administrator has full rights to Poweradmin using the web interface.{% endtrans %}
                    {% trans %}Password must be at least 6 characters long, contain at least one uppercase letter, one lowercase letter, and one number.{% endtrans %}
                    {% trans %}The default username is "admin".{% endtrans %}
                </td>
            </tr>
            <tbody>
        </table>
        <br>
        <input type="hidden" name="step" value="{{ next_step }}">
        <input type="hidden" name="language" value="{{ language }}">
        <input type="submit" name="submit" class="btn btn-primary btn-sm" value="{% trans %}Go to step{% endtrans %} {{ next_step }}">
    </form>
{% endblock %}

{% block javascripts %}
    <script>
        const charsets = {{ charsets|json_encode|raw }};
        const collations = {{ collations|json_encode|raw }};

        function updateDatabaseFields(dbType) {
            const charsetSelect = document.querySelector('select[name="db_charset"]');
            const collationSelect = document.querySelector('select[name="db_collation"]');

            const charsetOptions = charsets[dbType] || [];
            const collationOptions = collations[dbType] || [];

            charsetSelect.innerHTML = '<option value="">{% trans %}Use default{% endtrans %}</option>';
            charsetOptions.forEach(charset => {
                const option = document.createElement('option');
                option.value = charset;
                option.textContent = charset;
                charsetSelect.appendChild(option);
            });

            collationSelect.innerHTML = '<option value="">{% trans %}Use default{% endtrans %}</option>';
            collationOptions.forEach(collation => {
                const option = document.createElement('option');
                option.value = collation;
                option.textContent = collation;
                collationSelect.appendChild(option);
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            const dbTypeElement = document.getElementById('db_type');
            if (dbTypeElement) {
                updateFormFields(dbTypeElement.value);
                updateDatabaseFields(dbTypeElement.value);

                dbTypeElement.addEventListener('change', function() {
                    updateDatabaseFields(this.value);
                });
            }
        });
    </script>
{% endblock %}
